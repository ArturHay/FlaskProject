name: Build & Deploy to VPS

on:
  push:
    branches: [ "main" ]
  # ou n'importe quelle autre déclencheur que tu souhaites (pull_request, tag, etc.)

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) Récupérer le code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2) Configurer l'accès SSH pour scp/ssh
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # 3) Construire l'image Docker DANS le runner GitHub
      - name: Build Docker image
        run: |
          docker build -t flask-app:latest .

      # 4) Exporter (save) l'image Docker en un fichier TAR
      - name: Save Docker image
        run: |
          docker save flask-app:latest -o flaskapp.tar

      # 5) Transférer le fichier TAR sur le VPS via scp
      - name: Copy Docker image to VPS
        run: |
          scp -o StrictHostKeyChecking=no flaskapp.tar root@185.158.132.195:/root/

      # 6) Charger l'image sur le VPS et lancer le conteneur
      - name: Run container on VPS
        run: |
          ssh -o StrictHostKeyChecking=no root@185.158.132.195 << 'EOSSH'
            # Charger l'image depuis le fichier TAR
            docker load -i /root/flaskapp.tar

            # Arrêter et supprimer l'ancien conteneur (si besoin)
            docker stop flask_app_container || true
            docker rm flask_app_container || true

            # Lancer la nouvelle version
            docker run -d --name flask_app_container -p 8877:8877 flask-app:latest

            # Nettoyage: on peut supprimer le .tar si on veut
            rm /root/flaskapp.tar
          EOSSH
